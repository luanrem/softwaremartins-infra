version: "3.7"

services:
  kestra_postgres:
    image: postgres:16
    volumes:
      - kestra_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KESTRA_DB}
      POSTGRES_USER: ${KESTRA_USER}
      POSTGRES_PASSWORD: ${KESTRA_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KESTRA_USER} -d ${KESTRA_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - network_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 1024M

  kestra:
    image: kestra/kestra:latest
    user: "root"
    command: ["server", "standalone", "--port", "8082"]
    volumes:
      - kestra_data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - kestra_wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra_postgres:5432/${KESTRA_DB}
            username: ${KESTRA_USER}
            password: ${KESTRA_PASSWORD}
        kestra:
          server:
            cors:
              enabled: true
            basicAuth:
              enabled: false
          repository:
            type: postgres
          queue:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          tasks:
            tmpDir:
              path: "/tmp/kestra-wd/tmp"
          url: "https://${KESTRA_URL}"
    networks:
      - network_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "2"
          memory: 4096M
      labels:
        - traefik.enable=true
        - traefik.http.routers.kestra.rule=Host(`${KESTRA_URL}`)
        - traefik.http.routers.kestra.entrypoints=websecure
        - traefik.http.routers.kestra.priority=1
        - traefik.http.routers.kestra.tls.certresolver=letsencryptresolver
        - traefik.http.routers.kestra.service=kestra
        - traefik.http.services.kestra.loadbalancer.server.port=8082
        - traefik.http.services.kestra.loadbalancer.passHostHeader=true

volumes:
  kestra_postgres_data:
    external: true
    name: kestra_postgres_data
  kestra_data:
    external: true
    name: kestra_data
  kestra_wd:
    external: true
    name: kestra_wd

networks:
  network_public:
    external: true
    name: network_public
